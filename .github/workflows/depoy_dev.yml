name: Deploy Dev
permissions:
  security-events: write

on:
  push:
    branches: [ "dev" ]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: View Contents
        run: ls -l
      - uses: actions/upload-artifact@master
        with:
          name: checkout-artifact
          path: ./

  terraform_validate:
    runs-on: ubuntu-latest
    needs: checkout
   
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout-artifact
          path: ./

      - name: View Contents
        run: ls -l

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.2 

      - name: Find and Replace Env
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "dynamic_env"
          replace: "dev"
          regex: false
          include: "terraform/alicloud/backend.tf"      

      - name: Terraform Init
        id: init
        run: terraform -chdir=terraform/alicloud init
        env:
          ALICLOUD_ACCESS_KEY:  ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY:  ${{ secrets.ALICLOUD_SECRET_KEY }}

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=terraform/alicloud validate


  terraform_plan:
    runs-on: ubuntu-latest
    needs: [terraform_validate]

    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout-artifact
          path: ./

      - name: View Contents
        run: ls -l

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "dynamic_env"
          replace: "dev"
          regex: false
          include: "terraform/alicloud/backend.tf"    

      - name: Find and Replace Creds
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "dynamic_random_password"
          replace: ${{ secrets.ALICLOUD_RANDOM_PASSWORD }}
          regex: false

      - name: Terraform Init
        id: init
        run: terraform -chdir=terraform/alicloud init
        env:
          ALICLOUD_ACCESS_KEY:  ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY:  ${{ secrets.ALICLOUD_SECRET_KEY }}

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform/alicloud plan -var-file=../../config/dev/terraform.tfvars -out=dev-plan.out
        env:
          ALICLOUD_ACCESS_KEY:  ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY:  ${{ secrets.ALICLOUD_SECRET_KEY }}

      - uses: actions/upload-artifact@master
        with:
          name: plan-output
          path: terraform/alicloud/dev-plan.out

          
  terraform_apply:
    runs-on: ubuntu-latest
    needs: [terraform_plan]
    environment: dev
    steps:
      - uses: actions/download-artifact@master
        with:
          name: checkout-artifact
          path: ./

      - uses: actions/download-artifact@master
        with:
          name: plan-output
          path: "terraform/alicloud"
           
      - name: View Contents
        run: ls -l

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "dynamic_env"
          replace: "dev"
          regex: false
          include: "terraform/alicloud/backend.tf"      

      - name: Terraform Init
        id: init
        run: terraform -chdir=terraform/alicloud init
        env:
          ALICLOUD_ACCESS_KEY:  ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY:  ${{ secrets.ALICLOUD_SECRET_KEY }}

      - name: Terraform Apply
        id: apply
        run: terraform -chdir=terraform/alicloud apply --auto-approve dev-plan.out
        env:
          ALICLOUD_ACCESS_KEY:  ${{ secrets.ALICLOUD_ACCESS_KEY }}
          ALICLOUD_SECRET_KEY:  ${{ secrets.ALICLOUD_SECRET_KEY }}
      